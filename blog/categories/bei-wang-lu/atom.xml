<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 备忘录 | 御风独行]]></title>
  <link href="http://vxue.me/blog/categories/bei-wang-lu/atom.xml" rel="self"/>
  <link href="http://vxue.me/"/>
  <updated>2014-06-25T01:05:20-07:00</updated>
  <id>http://vxue.me/</id>
  <author>
    <name><![CDATA[Vincent Xue]]></name>
    <email><![CDATA[vincentfcn@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Less Is more,使用Less查看文本log]]></title>
    <link href="http://vxue.me/blog/2014/01/14/nav-big-text-log-with-less/"/>
    <updated>2014-01-14T07:19:34-08:00</updated>
    <id>http://vxue.me/blog/2014/01/14/nav-big-text-log-with-less</id>
    <content type="html"><![CDATA[<p>很多服务器程序都部署在 Linux/Unix 上，因此，跟踪一些 runtime 问题往往需要到 Linux/Unix 环境中查看Log，Log文件一般为比较大的文本文件，几百M或者几个G的Log文件都很常见，特别是出现问题频繁抛出Exception或者Error的时候。这个时候使用文本工具比如vi(m)会比较慢。使用能部分加载的Less可以比较方便地查看。使用下面是这些常用的Less命令可以很方便地查看Log文件。</p>

<ul>
<li>对于比较大的log文件，行号是一个比较好的定位方式。使用下面命令打开文件显示行号。
<code>
less -N #{filename}
</code>
查看的过程中文本搜索是必不可少的,
<code>
/#{keyword}
</code>
找到对应的结果时，文本直接跳转到对应的行号，由于是部分加载，这时候只显示搜索到文本的位置以及后面的内容，这时候的上下文往往是不完整的，如果想查看前面几行的内容。需要记住当前的行号，然后往上算出想查看的行号，比如当前是10000行，而想查看9990的内容，用行号+&ldquo;:"跳转到对应的行查看。
```

<h1>{line_number}g</h1>

<p>```
这样就能比较方便快速地在比较大的log文件中查看想要的内容了。</p></li>
</ul>


<p><strong>================================2014-06-25更新================================</strong>      <br/>
<strong>其实，向前/后翻页的命令b,d等是基于当前行号向前或向后翻页，因此想查看当前匹配行前面几行的内容时(如光标目前在10000行，查看9990行的内容)，不需要上述这么麻烦的方法，直接使用b,d翻页即可。这是当时不熟悉Less命令用法时一个迂回的用法。</strong>
<strong>==============================================================================</strong></p>

<ul>
<li>常用的打开参数。
<code>
-i：  忽略搜索时的大小写。
-m：  显示进度的百分比，类似于more命令的百分比更能。
-o： #{filename} 将less 输出的内容在指定文件中保存起来。
</code></li>
<li>搜索相关命令
<code>
/#{keywoard}：向下搜索“字符串”的功能。
?#{keywoard}：向上搜索“字符串”的功能。
n：重复前一个搜索（与 / 或 ? 有关。
n：重复前一个搜索（与 / 或 ? 有关。
&amp;#{keyword}： - 仅显示匹配模式的行，而不是整个文件。
</code></li>
<li>导航命令
<code>
g: 跳转到第一行。
G: 跳转到最后一行。
j: 向前移动一行。
k或y或空格或回车: 向后移动一行。
ma: 使用 a 标记文本的当前位置, 类似于设置bookmark. 'a - 导航到标记 a 处。
b: 向前翻一页。
d: 向后翻半页。
u: 向前翻半夜
</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java备忘-Java运行环境中的Environment variables和System Properties]]></title>
    <link href="http://vxue.me/blog/2013/12/28/java-note-runtime-configuration/"/>
    <updated>2013-12-28T03:49:59-08:00</updated>
    <id>http://vxue.me/blog/2013/12/28/java-note-runtime-configuration</id>
    <content type="html"><![CDATA[<p>这篇Java备忘录，主要记录Java runtime的参数配置。</p>

<h2>1. Environment Variables</h2>

<p>Environment Variables主要是运行平台相关的变量，包含了VM运行在的OS的环境变量，在Eclipse中可以通过debug/run配置界面(见下图)的对系统变量进行扩展/替代设置。</p>

<p>  <img src="http://vxue.u.qiniudn.com/blog.pic.eclipse_config_env.jpg" title="Eclipse中Environment Variables的设置" alt="Eclipse中Environment Variables的设置" /></p>

<p>Java代码中可以通过下面语句访问。
<code>
Map&lt;String, String&gt; env = System.getenv();
</code></p>

<p>下面的列表是在Win64环境中的一个运行实例中的Envrionment Variables列表。
<code>
USERPROFILE = C:\Users\Vincent Xue
ProgramData = C:\ProgramData
PATHEXT = .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.RB;.RBW
JAVA_HOME = C:\Program Files\Java\jdk1.7.0_40
ProgramFiles(x86) = C:\Program Files (x86)
TEMP = C:\Users\VINCEN~1\AppData\Local\Temp
SystemDrive = C:
ProgramFiles = C:\Program Files
M2 = D:\DevTools\maven\apache-maven-3.1.1-bin\bin
Path = C:\Program Files (x86)\SenchaSDKTools-2.0.0-beta3;C:\Ruby200-x64\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Java\jdk1.7.0_40\bin;C:\Program Files\nodejs\;D:\DevTools\mysql-5.5.20-winx64\bin;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;D:\DevTools\maven\apache-maven-3.1.1-bin\bin;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Users\Vincent Xue\AppData\Roaming\npm
HOMEDRIVE = C:
PROCESSOR_REVISION = 2a07
USERDOMAIN = VincentXue-PC
SSL_CERT_FILE = D:\ruby\cert\cacert.pem
ALLUSERSPROFILE = C:\ProgramData
ProgramW6432 = C:\Program Files
PROCESSOR_IDENTIFIER = Intel64 Family 6 Model 42 Stepping 7, GenuineIntel
SESSIONNAME = Console
M2_REPO = D:\DevTools\maven\M2_Repo
TMP = C:\Users\VINCEN~1\AppData\Local\Temp
MAVEN_OPTS = -Xms256m -Xmx512m
CommonProgramFiles = C:\Program Files\Common Files
LOGONSERVER = \\VINCENTXUE-PC
M2_HOME = D:\DevTools\maven\apache-maven-3.1.1-bin
PROCESSOR_ARCHITECTURE = AMD64
FP_NO_HOST_CHECK = NO
OS = Windows_NT
8HOMEPATH = \Users\Vincent Xue
VS100COMNTOOLS = C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\Tools\
PROCESSOR_LEVEL = 6
CommonProgramW6432 = C:\Program Files\Common Files
SENCHA_SDK_TOOLS_2_0_0_BETA3 = C:\Program Files (x86)\SenchaSDKTools-2.0.0-beta3
LOCALAPPDATA = C:\Users\Vincent Xue\AppData\Local
COMPUTERNAME = VINCENTXUE-PC
windir = C:\Windows
SystemRoot = C:\Windows
asl.log = Destination=file
NUMBER_OF_PROCESSORS = 8
USERNAME = Vincent Xue
PUBLIC = C:\Users\Public
PSModulePath = C:\Windows\system32\WindowsPowerShell\v1.0\Modules\
CommonProgramFiles(x86) = C:\Program Files (x86)\Common Files
ComSpec = C:\Windows\system32\cmd.exe
APPDATA = C:\Users\Vincent Xue\AppData\Roaming
</code></p>

<h2>2. System Properties</h2>

<p>System Properties主要是VM运行的属性，也可以通过debug/run配置界面进行扩展(下图)</p>

<p>  <img src="http://vxue.u.qiniudn.com/blog.pic.eclipse_config_vm_arguments.jpg" title="Eclipse中VM Arguments的设置" alt="Eclipse中VM Arguments的设置" /></p>

<p>在Java代码中可以通过下面语句访问。
<code>
Properties props = System.getProperties();
</code></p>

<p>下面的列表是在Win64环境中的一个运行实例中的System Properties列表。
<code>
java.runtime.name = Java(TM) SE Runtime Environment
sun.boot.library.path = C:\Program Files\Java\jre7\bin
java.vm.version = 24.0-b56
java.vm.vendor = Oracle Corporation
java.vendor.url = http://java.oracle.com/
path.separator = ;
java.vm.name = Java HotSpot(TM) 64-Bit Server VM
file.encoding.pkg = sun.io
user.country = US
user.script =
sun.java.launcher = SUN_STANDARD
sun.os.patch.level = Service Pack 1
java.vm.specification.name = Java Virtual Machine Specification
user.dir = D:\Java\JavaWorkspace\TaskProcessSystem
java.runtime.version = 1.7.0_40-b43
java.awt.graphicsenv = sun.awt.Win32GraphicsEnvironment
java.endorsed.dirs = C:\Program Files\Java\jre7\lib\endorsed
os.arch = amd64
java.io.tmpdir = C:\Users\VINCEN~1\AppData\Local\Temp\
line.separator =
java.vm.specification.vendor = Oracle Corporation
user.variant =
os.name = Windows 7
sun.jnu.encoding = GBK
java.library.path = C:\Program Files\Java\jre7\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\SenchaSDKTools-2.0.0-beta3;C:\Ruby200-x64\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Java\jdk1.7.0_40\bin;C:\Program Files\nodejs\;D:\DevTools\mysql-5.5.20-winx64\bin;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;D:\DevTools\maven\apache-maven-3.1.1-bin\bin;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Users\Vincent Xue\AppData\Roaming\npm;.
java.specification.name = Java Platform API Specification
java.class.version = 51.0
sun.management.compiler = HotSpot 64-Bit Tiered Compilers
os.version = 6.1
user.home = C:\Users\Vincent Xue
user.timezone = Asia/Shanghai
java.awt.printerjob = sun.awt.windows.WPrinterJob
file.encoding = GBK
java.specification.version = 1.7
java.class.path = D:\Java\JavaWorkspace\TaskProcessSystem\bin;D:\Java\JavaWorkspace\TaskProcessSystem\libs\log4j-api-2.0-beta9.jar;D:\Java\JavaWorkspace\TaskProcessSystem\libs\log4j-core-2.0-beta9.jar
user.name = Vincent Xue
java.vm.specification.version = 1.7
sun.java.command = me.vxue.tps.consumer.SimpleCalculationConsumer
java.home = C:\Program Files\Java\jre7
sun.arch.data.model = 64
user.language = en
java.specification.vendor = Oracle Corporation
awt.toolkit = sun.awt.windows.WToolkit
java.vm.info = mixed mode
java.version = 1.7.0_40
java.ext.dirs = C:\Program Files\Java\jre7\lib\ext;C:\Windows\Sun\Java\lib\ext
sun.boot.class.path = C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\lib\jfr.jar;C:\Program Files\Java\jre7\classes
java.vendor = Oracle Corporation
file.separator = \
java.vendor.url.bug = http://bugreport.sun.com/bugreport/
sun.io.unicode.encoding = UnicodeLittle
sun.cpu.endian = little
sun.desktop = windows
sun.cpu.isalist = amd64
</code></p>
]]></content>
  </entry>
  
</feed>
